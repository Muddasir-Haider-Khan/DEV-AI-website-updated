// Generated by Framer (013b13c)

import { addFonts, cx, CycleVariantState, useComponentViewport, useLocaleInfo, useVariantState, withCSS, withFX } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
const MotionDivWithFX = withFX(motion.div);

const serializationHash = "framer-ufxkF"

const variantClassNames = {U67UaF_OD: "framer-v-eoetc5"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`

const transition2 = {delay: 0, duration: 4.5, ease: [0, 0, 1, 1], type: "tween"}

const animation = {opacity: 1, rotate: 360, rotateX: 0, rotateY: 0, scale: 1, skewX: 0, skewY: 0, x: 0, y: 0}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({height, id, width, ...props}) => { return {...props} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const {style, className, layoutId, variant, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "U67UaF_OD", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-eoetc5", className, classNames)} data-border data-framer-name={"Radar"} layoutDependency={layoutDependency} layoutId={"U67UaF_OD"} ref={refBinding} style={{"--border-bottom-width": "1px", "--border-color": "var(--token-313dd4d6-9859-4bdd-889b-954a849d13e3, rgb(34, 34, 34))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", borderBottomLeftRadius: 136, borderBottomRightRadius: 136, borderTopLeftRadius: 136, borderTopRightRadius: 136, ...style}}><motion.div className={"framer-zagpp"} data-framer-name={"Circle outline"} layoutDependency={layoutDependency} layoutId={"en1ayvCmH"} style={{opacity: 0.2}} transformTemplate={transformTemplate1}><motion.div className={"framer-u2w4y0"} data-border data-framer-name={"Big"} layoutDependency={layoutDependency} layoutId={"TvcHkSyBK"} style={{"--border-bottom-width": "1px", "--border-color": "rgba(223, 122, 254, 0.1)", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", borderBottomLeftRadius: 1000, borderBottomRightRadius: 1000, borderTopLeftRadius: 1000, borderTopRightRadius: 1000}}/><motion.div className={"framer-1ge12ns"} data-border data-framer-name={"medium"} layoutDependency={layoutDependency} layoutId={"LMwZExeVs"} style={{"--border-bottom-width": "1px", "--border-color": "rgba(223, 122, 254, 0.1)", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", borderBottomLeftRadius: 1000, borderBottomRightRadius: 1000, borderTopLeftRadius: 1000, borderTopRightRadius: 1000}}/><motion.div className={"framer-12hi76m"} data-border data-framer-name={"smallest"} layoutDependency={layoutDependency} layoutId={"CEVTFrXN4"} style={{"--border-bottom-width": "1px", "--border-color": "rgba(223, 122, 254, 0.1)", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", borderBottomLeftRadius: 1000, borderBottomRightRadius: 1000, borderTopLeftRadius: 1000, borderTopRightRadius: 1000}}/></motion.div><motion.div className={"framer-g1vpep"} data-framer-name={"Container"} layoutDependency={layoutDependency} layoutId={"g3R1JaLk_"} transformTemplate={transformTemplate1}><MotionDivWithFX __framer__loop={animation} __framer__loopEffectEnabled __framer__loopRepeatDelay={0} __framer__loopRepeatType={"loop"} __framer__loopTransition={transition2} __perspectiveFX={false} __smartComponentFX __targetOpacity={1} className={"framer-1wq2jkj"} data-framer-name={"scan"} layoutDependency={layoutDependency} layoutId={"p7RfrFod4"} style={{background: "conic-gradient(from 0deg at 50% 50%, rgba(153, 238, 255, 0) 329.7296967377534deg, rgba(129, 74, 200, 0.2) 337.0760305958886deg, rgba(129, 74, 200, 0.6) 360deg)", borderBottomLeftRadius: 169, borderBottomRightRadius: 169, borderTopLeftRadius: 169, borderTopRightRadius: 169}}/></motion.div></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-ufxkF.framer-hak3pi, .framer-ufxkF .framer-hak3pi { display: block; }", ".framer-ufxkF.framer-eoetc5 { height: 107px; overflow: hidden; position: relative; width: 107px; will-change: var(--framer-will-change-override, transform); }", ".framer-ufxkF .framer-zagpp { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; left: 50%; min-height: 74px; overflow: visible; padding: 0px; position: absolute; top: 50%; width: 100%; }", ".framer-ufxkF .framer-u2w4y0 { bottom: 0px; flex: none; left: calc(50.46728971962619% - 74px / 2); overflow: visible; position: absolute; top: 0px; width: 74px; z-index: 1; }", ".framer-ufxkF .framer-1ge12ns { flex: none; height: 44px; left: calc(50.46728971962619% - 44px / 2); overflow: visible; position: absolute; top: calc(50.00000000000002% - 44px / 2); width: 44px; z-index: 1; }", ".framer-ufxkF .framer-12hi76m { flex: none; height: 22px; left: calc(50.46728971962619% - 22px / 2); overflow: visible; position: absolute; top: calc(50.00000000000002% - 22px / 2); width: 22px; z-index: 1; }", ".framer-ufxkF .framer-g1vpep { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; left: 50%; mix-blend-mode: screen; overflow: visible; padding: 0px; position: absolute; top: 50%; width: min-content; }", ".framer-ufxkF .framer-1wq2jkj { flex: none; height: 101px; overflow: hidden; position: relative; width: 101px; will-change: var(--framer-will-change-override, transform); }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-ufxkF .framer-zagpp, .framer-ufxkF .framer-g1vpep { gap: 0px; } .framer-ufxkF .framer-zagpp > *, .framer-ufxkF .framer-g1vpep > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-ufxkF .framer-zagpp > :first-child, .framer-ufxkF .framer-g1vpep > :first-child { margin-left: 0px; } .framer-ufxkF .framer-zagpp > :last-child, .framer-ufxkF .framer-g1vpep > :last-child { margin-right: 0px; } }", ".framer-ufxkF[data-border=\"true\"]::after, .framer-ufxkF [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 107
 * @framerIntrinsicWidth 107
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerX935Ek130: React.ComponentType<Props> = withCSS(Component, css, "framer-ufxkF") as typeof Component;
export default FramerX935Ek130;

FramerX935Ek130.displayName = "radar";

FramerX935Ek130.defaultProps = {height: 107, width: 107};

addFonts(FramerX935Ek130, [{explicitInter: true, fonts: []}], {supportsExplicitInterCodegen: true})