// Generated by Framer (f4ba5e0)

import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, CycleVariantState, getFonts, getFontsFromSharedStyle, RichText, SmartComponentScopedContainer, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import { Icon as Phosphor } from "https://framerusercontent.com/modules/tYScH7LTqUtz5KUaUAYP/p8dptk4UIND8hbFWz9V7/Phosphor.js";
import * as sharedStyle from "../css/csUbUKGQ_";
const PhosphorFonts = getFonts(Phosphor);

const serializationHash = "framer-sbluq"

const variantClassNames = {ZbkICOpPT: "framer-v-1tm44mn"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({height, iconColor, iconName, id, textColor, title, width, ...props}) => { return {...props, aBab7jJnS: title ?? props.aBab7jJnS ?? "Basic workflow automation", bROCjlOP4: iconColor ?? props.bROCjlOP4 ?? "var(--token-55fce8bf-ab86-42dc-8b77-6335cf9cf588, rgb(255, 255, 255))", It9jctiBf: iconName ?? props.It9jctiBf ?? "check", juPs7tgMz: textColor ?? props.juPs7tgMz ?? "var(--token-55fce8bf-ab86-42dc-8b77-6335cf9cf588, rgb(255, 255, 255))"} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;title?: string;iconName?: string;iconColor?: string;textColor?: string; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const {style, className, layoutId, variant, aBab7jJnS, It9jctiBf, bROCjlOP4, juPs7tgMz, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "ZbkICOpPT", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = [sharedStyle.className]

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-1tm44mn", className, classNames)} data-framer-name={"Feature point"} layoutDependency={layoutDependency} layoutId={"ZbkICOpPT"} ref={refBinding} style={{...style}}><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-vq2s0p-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"N3wVUvzQp-container"} nodeId={"N3wVUvzQp"} rendersWithMotion scopeId={"sFWwVQ4sW"}><Phosphor color={bROCjlOP4} height={"100%"} iconSearch={It9jctiBf} iconSelection={"House"} id={"N3wVUvzQp"} layoutId={"N3wVUvzQp"} mirrored={false} selectByList={false} style={{height: "100%", width: "100%"}} weight={"bold"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><RichText __fromCanvasComponent children={<React.Fragment><motion.p className={"framer-styles-preset-16w1u5n"} data-styles-preset={"csUbUKGQ_"} style={{"--framer-text-color": "var(--extracted-r6o4lv, var(--variable-reference-juPs7tgMz-sFWwVQ4sW))"}}>Basic workflow automation</motion.p></React.Fragment>} className={"framer-1c5vbfx"} fonts={["Inter"]} layoutDependency={layoutDependency} layoutId={"vFIdfiMAW"} style={{"--extracted-r6o4lv": "var(--variable-reference-juPs7tgMz-sFWwVQ4sW)", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline", "--variable-reference-juPs7tgMz-sFWwVQ4sW": juPs7tgMz}} text={aBab7jJnS} verticalAlignment={"top"} withExternalLayout/></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-sbluq.framer-9advh4, .framer-sbluq .framer-9advh4 { display: block; }", ".framer-sbluq.framer-1tm44mn { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 300px; }", ".framer-sbluq .framer-vq2s0p-container { flex: none; height: 20px; position: relative; width: 20px; }", ".framer-sbluq .framer-1c5vbfx { flex: 1 0 0px; height: auto; position: relative; white-space: pre-wrap; width: 1px; word-break: break-word; word-wrap: break-word; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-sbluq.framer-1tm44mn { gap: 0px; } .framer-sbluq.framer-1tm44mn > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-sbluq.framer-1tm44mn > :first-child { margin-left: 0px; } .framer-sbluq.framer-1tm44mn > :last-child { margin-right: 0px; } }", ...sharedStyle.css]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 22
 * @framerIntrinsicWidth 300
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]}}}
 * @framerVariables {"aBab7jJnS":"title","It9jctiBf":"iconName","bROCjlOP4":"iconColor","juPs7tgMz":"textColor"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramersFWwVQ4sW: React.ComponentType<Props> = withCSS(Component, css, "framer-sbluq") as typeof Component;
export default FramersFWwVQ4sW;

FramersFWwVQ4sW.displayName = "features";

FramersFWwVQ4sW.defaultProps = {height: 22, width: 300};

addPropertyControls(FramersFWwVQ4sW, {aBab7jJnS: {defaultValue: "Basic workflow automation", displayTextArea: false, title: "Title", type: ControlType.String}, It9jctiBf: {defaultValue: "check", placeholder: "Menu, Wifi, Boxâ€¦", title: "Icon name", type: ControlType.String}, bROCjlOP4: {defaultValue: "var(--token-55fce8bf-ab86-42dc-8b77-6335cf9cf588, rgb(255, 255, 255)) /* {\"name\":\"Primary Text\"} */", title: "Icon Color", type: ControlType.Color}, juPs7tgMz: {defaultValue: "var(--token-55fce8bf-ab86-42dc-8b77-6335cf9cf588, rgb(255, 255, 255))", title: "Text Color", type: ControlType.Color}} as any)

addFonts(FramersFWwVQ4sW, [{explicitInter: true, fonts: [{family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400"}]}, ...PhosphorFonts, ...getFontsFromSharedStyle(sharedStyle.fonts)], {supportsExplicitInterCodegen: true})